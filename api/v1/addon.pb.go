// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        (unknown)
// source: api/v1/addon.proto

package v1

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AddonParameterValueType int32

const (
	AddonParameterValueType_unknown_value_type AddonParameterValueType = 0
	AddonParameterValueType_string             AddonParameterValueType = 1
	AddonParameterValueType_boolean            AddonParameterValueType = 2
	AddonParameterValueType_number             AddonParameterValueType = 3
	AddonParameterValueType_cidr               AddonParameterValueType = 4
	AddonParameterValueType_resource           AddonParameterValueType = 5
	AddonParameterValueType_resource_required  AddonParameterValueType = 6
)

// Enum value maps for AddonParameterValueType.
var (
	AddonParameterValueType_name = map[int32]string{
		0: "unknown_value_type",
		1: "string",
		2: "boolean",
		3: "number",
		4: "cidr",
		5: "resource",
		6: "resource_required",
	}
	AddonParameterValueType_value = map[string]int32{
		"unknown_value_type": 0,
		"string":             1,
		"boolean":            2,
		"number":             3,
		"cidr":               4,
		"resource":           5,
		"resource_required":  6,
	}
)

func (x AddonParameterValueType) Enum() *AddonParameterValueType {
	p := new(AddonParameterValueType)
	*p = x
	return p
}

func (x AddonParameterValueType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AddonParameterValueType) Descriptor() protoreflect.EnumDescriptor {
	return file_api_v1_addon_proto_enumTypes[0].Descriptor()
}

func (AddonParameterValueType) Type() protoreflect.EnumType {
	return &file_api_v1_addon_proto_enumTypes[0]
}

func (x AddonParameterValueType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AddonParameterValueType.Descriptor instead.
func (AddonParameterValueType) EnumDescriptor() ([]byte, []int) {
	return file_api_v1_addon_proto_rawDescGZIP(), []int{0}
}

type AddonRequirementResourceType int32

const (
	AddonRequirementResourceType_unknown_resource_type AddonRequirementResourceType = 0
	AddonRequirementResourceType_cluster               AddonRequirementResourceType = 1
	AddonRequirementResourceType_addon                 AddonRequirementResourceType = 2
	AddonRequirementResourceType_machine_pool          AddonRequirementResourceType = 3
)

// Enum value maps for AddonRequirementResourceType.
var (
	AddonRequirementResourceType_name = map[int32]string{
		0: "unknown_resource_type",
		1: "cluster",
		2: "addon",
		3: "machine_pool",
	}
	AddonRequirementResourceType_value = map[string]int32{
		"unknown_resource_type": 0,
		"cluster":               1,
		"addon":                 2,
		"machine_pool":          3,
	}
)

func (x AddonRequirementResourceType) Enum() *AddonRequirementResourceType {
	p := new(AddonRequirementResourceType)
	*p = x
	return p
}

func (x AddonRequirementResourceType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AddonRequirementResourceType) Descriptor() protoreflect.EnumDescriptor {
	return file_api_v1_addon_proto_enumTypes[1].Descriptor()
}

func (AddonRequirementResourceType) Type() protoreflect.EnumType {
	return &file_api_v1_addon_proto_enumTypes[1]
}

func (x AddonRequirementResourceType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AddonRequirementResourceType.Descriptor instead.
func (AddonRequirementResourceType) EnumDescriptor() ([]byte, []int) {
	return file_api_v1_addon_proto_rawDescGZIP(), []int{1}
}

type AddonInstallMode int32

const (
	AddonInstallMode_unknown_install_mode AddonInstallMode = 0
	AddonInstallMode_single_namespace     AddonInstallMode = 1
	AddonInstallMode_own_namespace        AddonInstallMode = 2
	AddonInstallMode_all_namespaces       AddonInstallMode = 3
)

// Enum value maps for AddonInstallMode.
var (
	AddonInstallMode_name = map[int32]string{
		0: "unknown_install_mode",
		1: "single_namespace",
		2: "own_namespace",
		3: "all_namespaces",
	}
	AddonInstallMode_value = map[string]int32{
		"unknown_install_mode": 0,
		"single_namespace":     1,
		"own_namespace":        2,
		"all_namespaces":       3,
	}
)

func (x AddonInstallMode) Enum() *AddonInstallMode {
	p := new(AddonInstallMode)
	*p = x
	return p
}

func (x AddonInstallMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AddonInstallMode) Descriptor() protoreflect.EnumDescriptor {
	return file_api_v1_addon_proto_enumTypes[2].Descriptor()
}

func (AddonInstallMode) Type() protoreflect.EnumType {
	return &file_api_v1_addon_proto_enumTypes[2]
}

func (x AddonInstallMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AddonInstallMode.Descriptor instead.
func (AddonInstallMode) EnumDescriptor() ([]byte, []int) {
	return file_api_v1_addon_proto_rawDescGZIP(), []int{2}
}

type Addon struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Unique identifier for the Addon object
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Name of the Addon.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Description of the Addon
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// Link to documentation about the add-on.
	DocsLink string `protobuf:"bytes,4,opt,name=docs_link,json=docsLink,proto3" json:"docs_link,omitempty"`
	// Label used to attach to a cluster deployment when add-on is installed.
	Label string `protobuf:"bytes,5,opt,name=label,proto3" json:"label,omitempty"`
	// Base64-encoded icon representing an add-on. The icon should be in PNG format.
	Icon string `protobuf:"bytes,6,opt,name=icon,proto3" json:"icon,omitempty"`
	// Indicates if this add-on can be added to clusters.
	Enabled bool `protobuf:"varint,7,opt,name=enabled,proto3" json:"enabled,omitempty"`
	// Used to determine from where to reserve quota for this add-on.
	ResourceName string `protobuf:"bytes,8,opt,name=resource_name,json=resourceName,proto3" json:"resource_name,omitempty"`
	// Used to determine how many units of quota an add-on consumes per resource name.
	ResourceCost float32 `protobuf:"fixed32,9,opt,name=resource_cost,json=resourceCost,proto3" json:"resource_cost,omitempty"`
	// The namespace in which the addon CRD exists.
	TargetNamespace string `protobuf:"bytes,10,opt,name=target_namespace,json=targetNamespace,proto3" json:"target_namespace,omitempty"`
	// Representation of an add-on InstallMode field.
	InstallMode AddonInstallMode `protobuf:"varint,11,opt,name=install_mode,json=installMode,proto3,enum=v1.AddonInstallMode" json:"install_mode,omitempty"`
	// The name of the operator installed by this add-on.
	OperatorName string `protobuf:"bytes,12,opt,name=operator_name,json=operatorName,proto3" json:"operator_name,omitempty"`
	// Indicates if this add-on is hidden.
	Hidden bool `protobuf:"varint,13,opt,name=hidden,proto3" json:"hidden,omitempty"`
	// Indicates if this add-on has external resources associated with it
	HasExternalResources bool `protobuf:"varint,14,opt,name=has_external_resources,json=hasExternalResources,proto3" json:"has_external_resources,omitempty"`
	// The name of the service account used when authenticating.
	ServiceAccount string `protobuf:"bytes,15,opt,name=service_account,json=serviceAccount,proto3" json:"service_account,omitempty"`
	// Name of the secret that will hold the credentials required to access cloud resources.
	CredentialsSecret string `protobuf:"bytes,16,opt,name=credentials_secret,json=credentialsSecret,proto3" json:"credentials_secret,omitempty"`
	// List of policy permissions needed to access cloud resources.
	PolicyPermissions []string `protobuf:"bytes,17,rep,name=policy_permissions,json=policyPermissions,proto3" json:"policy_permissions,omitempty"`
	// Indicates if add-on is part of a managed service.
	ManagedService bool `protobuf:"varint,18,opt,name=managed_service,json=managedService,proto3" json:"managed_service,omitempty"`
	// List of Addon parameters.
	Parameters []*AddonParameter `protobuf:"bytes,19,rep,name=parameters,proto3" json:"parameters,omitempty"`
	// List of Addon requirements.
	Requirements []*AddonRequirement `protobuf:"bytes,20,rep,name=requirements,proto3" json:"requirements,omitempty"`
	// List of Addon SubOperators
	SubOperators []*AddonSubOperator `protobuf:"bytes,21,rep,name=sub_operators,json=subOperators,proto3" json:"sub_operators,omitempty"`
	// Addon configuration
	Config *AddonConfig `protobuf:"bytes,22,opt,name=config,proto3" json:"config,omitempty"`
}

func (x *Addon) Reset() {
	*x = Addon{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_addon_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Addon) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Addon) ProtoMessage() {}

func (x *Addon) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_addon_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Addon.ProtoReflect.Descriptor instead.
func (*Addon) Descriptor() ([]byte, []int) {
	return file_api_v1_addon_proto_rawDescGZIP(), []int{0}
}

func (x *Addon) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Addon) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Addon) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Addon) GetDocsLink() string {
	if x != nil {
		return x.DocsLink
	}
	return ""
}

func (x *Addon) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *Addon) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *Addon) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *Addon) GetResourceName() string {
	if x != nil {
		return x.ResourceName
	}
	return ""
}

func (x *Addon) GetResourceCost() float32 {
	if x != nil {
		return x.ResourceCost
	}
	return 0
}

func (x *Addon) GetTargetNamespace() string {
	if x != nil {
		return x.TargetNamespace
	}
	return ""
}

func (x *Addon) GetInstallMode() AddonInstallMode {
	if x != nil {
		return x.InstallMode
	}
	return AddonInstallMode_unknown_install_mode
}

func (x *Addon) GetOperatorName() string {
	if x != nil {
		return x.OperatorName
	}
	return ""
}

func (x *Addon) GetHidden() bool {
	if x != nil {
		return x.Hidden
	}
	return false
}

func (x *Addon) GetHasExternalResources() bool {
	if x != nil {
		return x.HasExternalResources
	}
	return false
}

func (x *Addon) GetServiceAccount() string {
	if x != nil {
		return x.ServiceAccount
	}
	return ""
}

func (x *Addon) GetCredentialsSecret() string {
	if x != nil {
		return x.CredentialsSecret
	}
	return ""
}

func (x *Addon) GetPolicyPermissions() []string {
	if x != nil {
		return x.PolicyPermissions
	}
	return nil
}

func (x *Addon) GetManagedService() bool {
	if x != nil {
		return x.ManagedService
	}
	return false
}

func (x *Addon) GetParameters() []*AddonParameter {
	if x != nil {
		return x.Parameters
	}
	return nil
}

func (x *Addon) GetRequirements() []*AddonRequirement {
	if x != nil {
		return x.Requirements
	}
	return nil
}

func (x *Addon) GetSubOperators() []*AddonSubOperator {
	if x != nil {
		return x.SubOperators
	}
	return nil
}

func (x *Addon) GetConfig() *AddonConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

type AddonParameter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Unique identifier for the Addon parameter
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Name of the Addon parameter
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Description of the Addon parameter
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// Type of value of the add-on parameter.
	ValueType AddonParameterValueType `protobuf:"varint,4,opt,name=value_type,json=valueType,proto3,enum=v1.AddonParameterValueType" json:"value_type,omitempty"`
	// Validation rule for the add-on parameter.
	Validation string `protobuf:"bytes,5,opt,name=validation,proto3" json:"validation,omitempty"`
	// Error message to return should the parameter be invalid.
	ValidationErrMessage string `protobuf:"bytes,6,opt,name=validation_err_message,json=validationErrMessage,proto3" json:"validation_err_message,omitempty"`
	// Indicates if this parameter is required by the add-on.
	Required bool `protobuf:"varint,7,opt,name=required,proto3" json:"required,omitempty"`
	// Indicates if this parameter can be edited after creation.
	Editable bool `protobuf:"varint,8,opt,name=editable,proto3" json:"editable,omitempty"`
	// Indicates if this parameter is enabled for the add-on.
	Enabled bool `protobuf:"varint,9,opt,name=enabled,proto3" json:"enabled,omitempty"`
	// TIndicates the value default for the add-on parameter.
	DefaultValue string `protobuf:"bytes,10,opt,name=default_value,json=defaultValue,proto3" json:"default_value,omitempty"`
	// List of options for the add-on parameter value.
	Options []*AddonParameterOption `protobuf:"bytes,11,rep,name=options,proto3" json:"options,omitempty"`
}

func (x *AddonParameter) Reset() {
	*x = AddonParameter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_addon_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddonParameter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddonParameter) ProtoMessage() {}

func (x *AddonParameter) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_addon_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddonParameter.ProtoReflect.Descriptor instead.
func (*AddonParameter) Descriptor() ([]byte, []int) {
	return file_api_v1_addon_proto_rawDescGZIP(), []int{1}
}

func (x *AddonParameter) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AddonParameter) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AddonParameter) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *AddonParameter) GetValueType() AddonParameterValueType {
	if x != nil {
		return x.ValueType
	}
	return AddonParameterValueType_unknown_value_type
}

func (x *AddonParameter) GetValidation() string {
	if x != nil {
		return x.Validation
	}
	return ""
}

func (x *AddonParameter) GetValidationErrMessage() string {
	if x != nil {
		return x.ValidationErrMessage
	}
	return ""
}

func (x *AddonParameter) GetRequired() bool {
	if x != nil {
		return x.Required
	}
	return false
}

func (x *AddonParameter) GetEditable() bool {
	if x != nil {
		return x.Editable
	}
	return false
}

func (x *AddonParameter) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *AddonParameter) GetDefaultValue() string {
	if x != nil {
		return x.DefaultValue
	}
	return ""
}

func (x *AddonParameter) GetOptions() []*AddonParameterOption {
	if x != nil {
		return x.Options
	}
	return nil
}

type AddonParameterOption struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Name of Addon parameter option
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Value of Addon parameter option
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	// Requirements for the Addon parameter
	Requirements []*AddonRequirement `protobuf:"bytes,3,rep,name=requirements,proto3" json:"requirements,omitempty"`
}

func (x *AddonParameterOption) Reset() {
	*x = AddonParameterOption{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_addon_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddonParameterOption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddonParameterOption) ProtoMessage() {}

func (x *AddonParameterOption) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_addon_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddonParameterOption.ProtoReflect.Descriptor instead.
func (*AddonParameterOption) Descriptor() ([]byte, []int) {
	return file_api_v1_addon_proto_rawDescGZIP(), []int{2}
}

func (x *AddonParameterOption) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AddonParameterOption) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *AddonParameterOption) GetRequirements() []*AddonRequirement {
	if x != nil {
		return x.Requirements
	}
	return nil
}

type AddonRequirement struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ID of the add-on requirement.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Type of resource of the add-on requirement.
	Resource AddonRequirementResourceType `protobuf:"varint,2,opt,name=resource,proto3,enum=v1.AddonRequirementResourceType" json:"resource,omitempty"`
	// Data for the add-on requirement.
	Data map[string]*anypb.Any `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Representation of an add-on requirement status.
	Status *AddonResourceRequirementStatus `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
	// Indicates if this requirement is enabled for the add-on.
	Enabled bool `protobuf:"varint,5,opt,name=enabled,proto3" json:"enabled,omitempty"`
}

func (x *AddonRequirement) Reset() {
	*x = AddonRequirement{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_addon_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddonRequirement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddonRequirement) ProtoMessage() {}

func (x *AddonRequirement) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_addon_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddonRequirement.ProtoReflect.Descriptor instead.
func (*AddonRequirement) Descriptor() ([]byte, []int) {
	return file_api_v1_addon_proto_rawDescGZIP(), []int{3}
}

func (x *AddonRequirement) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AddonRequirement) GetResource() AddonRequirementResourceType {
	if x != nil {
		return x.Resource
	}
	return AddonRequirementResourceType_unknown_resource_type
}

func (x *AddonRequirement) GetData() map[string]*anypb.Any {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *AddonRequirement) GetStatus() *AddonResourceRequirementStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *AddonRequirement) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

type AddonSubOperator struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Name of the add-on sub operator
	OperatorName string `protobuf:"bytes,1,opt,name=operator_name,json=operatorName,proto3" json:"operator_name,omitempty"`
	// 	Namespace of the add-on sub operator
	OperatorNamespace string `protobuf:"bytes,2,opt,name=operator_namespace,json=operatorNamespace,proto3" json:"operator_namespace,omitempty"`
	// Indicates if the sub operator is enabled for the add-on
	Enabled bool `protobuf:"varint,3,opt,name=enabled,proto3" json:"enabled,omitempty"`
}

func (x *AddonSubOperator) Reset() {
	*x = AddonSubOperator{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_addon_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddonSubOperator) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddonSubOperator) ProtoMessage() {}

func (x *AddonSubOperator) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_addon_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddonSubOperator.ProtoReflect.Descriptor instead.
func (*AddonSubOperator) Descriptor() ([]byte, []int) {
	return file_api_v1_addon_proto_rawDescGZIP(), []int{4}
}

func (x *AddonSubOperator) GetOperatorName() string {
	if x != nil {
		return x.OperatorName
	}
	return ""
}

func (x *AddonSubOperator) GetOperatorNamespace() string {
	if x != nil {
		return x.OperatorNamespace
	}
	return ""
}

func (x *AddonSubOperator) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

type AddonResourceRequirementStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Indicates if the resource requirement is fullfilles.
	Fullfilled bool `protobuf:"varint,1,opt,name=fullfilled,proto3" json:"fullfilled,omitempty"`
	// Indicated the errors for fulfilling this confition, if any.
	ErrorMsgs []string `protobuf:"bytes,2,rep,name=error_msgs,json=errorMsgs,proto3" json:"error_msgs,omitempty"`
}

func (x *AddonResourceRequirementStatus) Reset() {
	*x = AddonResourceRequirementStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_addon_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddonResourceRequirementStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddonResourceRequirementStatus) ProtoMessage() {}

func (x *AddonResourceRequirementStatus) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_addon_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddonResourceRequirementStatus.ProtoReflect.Descriptor instead.
func (*AddonResourceRequirementStatus) Descriptor() ([]byte, []int) {
	return file_api_v1_addon_proto_rawDescGZIP(), []int{5}
}

func (x *AddonResourceRequirementStatus) GetFullfilled() bool {
	if x != nil {
		return x.Fullfilled
	}
	return false
}

func (x *AddonResourceRequirementStatus) GetErrorMsgs() []string {
	if x != nil {
		return x.ErrorMsgs
	}
	return nil
}

type AddonConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// List of environment variables.
	AddOnEnvironmentVariables []*AddonEnvironmentVariable `protobuf:"bytes,1,rep,name=add_on_environment_variables,json=addOnEnvironmentVariables,proto3" json:"add_on_environment_variables,omitempty"`
}

func (x *AddonConfig) Reset() {
	*x = AddonConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_addon_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddonConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddonConfig) ProtoMessage() {}

func (x *AddonConfig) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_addon_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddonConfig.ProtoReflect.Descriptor instead.
func (*AddonConfig) Descriptor() ([]byte, []int) {
	return file_api_v1_addon_proto_rawDescGZIP(), []int{6}
}

func (x *AddonConfig) GetAddOnEnvironmentVariables() []*AddonEnvironmentVariable {
	if x != nil {
		return x.AddOnEnvironmentVariables
	}
	return nil
}

type AddonEnvironmentVariable struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ID of the environment variable
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Name of the environment variable
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Value of the environment variable
	Value string `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *AddonEnvironmentVariable) Reset() {
	*x = AddonEnvironmentVariable{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_addon_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddonEnvironmentVariable) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddonEnvironmentVariable) ProtoMessage() {}

func (x *AddonEnvironmentVariable) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_addon_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddonEnvironmentVariable.ProtoReflect.Descriptor instead.
func (*AddonEnvironmentVariable) Descriptor() ([]byte, []int) {
	return file_api_v1_addon_proto_rawDescGZIP(), []int{7}
}

func (x *AddonEnvironmentVariable) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AddonEnvironmentVariable) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AddonEnvironmentVariable) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type AddonCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Addon to create
	Addon *Addon `protobuf:"bytes,1,opt,name=addon,proto3" json:"addon,omitempty"`
}

func (x *AddonCreateRequest) Reset() {
	*x = AddonCreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_addon_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddonCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddonCreateRequest) ProtoMessage() {}

func (x *AddonCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_addon_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddonCreateRequest.ProtoReflect.Descriptor instead.
func (*AddonCreateRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_addon_proto_rawDescGZIP(), []int{8}
}

func (x *AddonCreateRequest) GetAddon() *Addon {
	if x != nil {
		return x.Addon
	}
	return nil
}

type AddonCreateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ID of the created Addon
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *AddonCreateResponse) Reset() {
	*x = AddonCreateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_addon_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddonCreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddonCreateResponse) ProtoMessage() {}

func (x *AddonCreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_addon_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddonCreateResponse.ProtoReflect.Descriptor instead.
func (*AddonCreateResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_addon_proto_rawDescGZIP(), []int{9}
}

func (x *AddonCreateResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type AddonReadRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ID of the Addon to read
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *AddonReadRequest) Reset() {
	*x = AddonReadRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_addon_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddonReadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddonReadRequest) ProtoMessage() {}

func (x *AddonReadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_addon_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddonReadRequest.ProtoReflect.Descriptor instead.
func (*AddonReadRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_addon_proto_rawDescGZIP(), []int{10}
}

func (x *AddonReadRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type AddonReadResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Read Addon
	Addon *Addon `protobuf:"bytes,1,opt,name=addon,proto3" json:"addon,omitempty"`
}

func (x *AddonReadResponse) Reset() {
	*x = AddonReadResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_addon_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddonReadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddonReadResponse) ProtoMessage() {}

func (x *AddonReadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_addon_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddonReadResponse.ProtoReflect.Descriptor instead.
func (*AddonReadResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_addon_proto_rawDescGZIP(), []int{11}
}

func (x *AddonReadResponse) GetAddon() *Addon {
	if x != nil {
		return x.Addon
	}
	return nil
}

type AddonListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// List of returned Addons
	Addons []*Addon `protobuf:"bytes,1,rep,name=addons,proto3" json:"addons,omitempty"`
}

func (x *AddonListResponse) Reset() {
	*x = AddonListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_addon_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddonListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddonListResponse) ProtoMessage() {}

func (x *AddonListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_addon_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddonListResponse.ProtoReflect.Descriptor instead.
func (*AddonListResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_addon_proto_rawDescGZIP(), []int{12}
}

func (x *AddonListResponse) GetAddons() []*Addon {
	if x != nil {
		return x.Addons
	}
	return nil
}

type AddonUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Addon to update
	Addon *Addon `protobuf:"bytes,1,opt,name=addon,proto3" json:"addon,omitempty"`
}

func (x *AddonUpdateRequest) Reset() {
	*x = AddonUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_addon_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddonUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddonUpdateRequest) ProtoMessage() {}

func (x *AddonUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_addon_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddonUpdateRequest.ProtoReflect.Descriptor instead.
func (*AddonUpdateRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_addon_proto_rawDescGZIP(), []int{13}
}

func (x *AddonUpdateRequest) GetAddon() *Addon {
	if x != nil {
		return x.Addon
	}
	return nil
}

type AddonUpdateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Updated Addon
	Addon *Addon `protobuf:"bytes,1,opt,name=Addon,proto3" json:"Addon,omitempty"`
}

func (x *AddonUpdateResponse) Reset() {
	*x = AddonUpdateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_addon_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddonUpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddonUpdateResponse) ProtoMessage() {}

func (x *AddonUpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_addon_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddonUpdateResponse.ProtoReflect.Descriptor instead.
func (*AddonUpdateResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_addon_proto_rawDescGZIP(), []int{14}
}

func (x *AddonUpdateResponse) GetAddon() *Addon {
	if x != nil {
		return x.Addon
	}
	return nil
}

type AddonDeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ID of the Addon to delete
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *AddonDeleteRequest) Reset() {
	*x = AddonDeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_addon_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddonDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddonDeleteRequest) ProtoMessage() {}

func (x *AddonDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_addon_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddonDeleteRequest.ProtoReflect.Descriptor instead.
func (*AddonDeleteRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_addon_proto_rawDescGZIP(), []int{15}
}

func (x *AddonDeleteRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type AddonDeleteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ID of the deleted Addon
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *AddonDeleteResponse) Reset() {
	*x = AddonDeleteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_addon_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddonDeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddonDeleteResponse) ProtoMessage() {}

func (x *AddonDeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_addon_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddonDeleteResponse.ProtoReflect.Descriptor instead.
func (*AddonDeleteResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_addon_proto_rawDescGZIP(), []int{16}
}

func (x *AddonDeleteResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

var File_api_v1_addon_proto protoreflect.FileDescriptor

var file_api_v1_addon_proto_rawDesc = []byte{
	0x0a, 0x12, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x64, 0x64, 0x6f, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xd1,
	0x06, 0x0a, 0x05, 0x41, 0x64, 0x64, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b,
	0x0a, 0x09, 0x64, 0x6f, 0x63, 0x73, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x64, 0x6f, 0x63, 0x73, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x14, 0x0a, 0x05, 0x6c,
	0x61, 0x62, 0x65, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65,
	0x6c, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12,
	0x23, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x5f, 0x63, 0x6f, 0x73, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0c, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x10, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x12, 0x37, 0x0a, 0x0c, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x5f,
	0x6d, 0x6f, 0x64, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x76, 0x31, 0x2e,
	0x41, 0x64, 0x64, 0x6f, 0x6e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x4d, 0x6f, 0x64, 0x65,
	0x52, 0x0b, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x23, 0x0a,
	0x0d, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x06, 0x68, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x12, 0x34, 0x0a, 0x16, 0x68, 0x61,
	0x73, 0x5f, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x14, 0x68, 0x61, 0x73, 0x45,
	0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73,
	0x12, 0x27, 0x0a, 0x0f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2d, 0x0a, 0x12, 0x63, 0x72, 0x65,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x5f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18,
	0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61,
	0x6c, 0x73, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x2d, 0x0a, 0x12, 0x70, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x5f, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x11,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x11, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x50, 0x65, 0x72, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x64, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x32, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x18, 0x13,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x6f, 0x6e, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65,
	0x74, 0x65, 0x72, 0x73, 0x12, 0x38, 0x0a, 0x0c, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x18, 0x14, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x76, 0x31, 0x2e,
	0x41, 0x64, 0x64, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x0c, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x39,
	0x0a, 0x0d, 0x73, 0x75, 0x62, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x18,
	0x15, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x6f, 0x6e,
	0x53, 0x75, 0x62, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x0c, 0x73, 0x75, 0x62,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x12, 0x27, 0x0a, 0x06, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x76, 0x31, 0x2e, 0x41,
	0x64, 0x64, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x22, 0x93, 0x03, 0x0a, 0x0e, 0x41, 0x64, 0x64, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x65, 0x74, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3a, 0x0a, 0x0a, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x1b, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65,
	0x74, 0x65, 0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x34, 0x0a, 0x16, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x65, 0x72, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x45, 0x72, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x08, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x64, 0x69,
	0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x65, 0x64, 0x69,
	0x74, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12,
	0x23, 0x0a, 0x0d, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x12, 0x32, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x6f, 0x6e,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x7a, 0x0a, 0x14, 0x41, 0x64, 0x64, 0x6f,
	0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x38, 0x0a, 0x0c, 0x72, 0x65,
	0x71, 0x75, 0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x69,
	0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0c, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x22, 0xb9, 0x02, 0x0a, 0x10, 0x41, 0x64, 0x64, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x3c, 0x0a, 0x08, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x76, 0x31,
	0x2e, 0x41, 0x64, 0x64, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x32, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x61, 0x74, 0x61,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x3a, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x76, 0x31,
	0x2e, 0x41, 0x64, 0x64, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x64, 0x1a, 0x4d, 0x0a, 0x09, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x2a, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x22, 0x80, 0x01, 0x0a, 0x10, 0x41, 0x64, 0x64, 0x6f, 0x6e, 0x53, 0x75, 0x62, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x23, 0x0a, 0x0d, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f,
	0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2d, 0x0a, 0x12, 0x6f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x64, 0x22, 0x5f, 0x0a, 0x1e, 0x41, 0x64, 0x64, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x75, 0x6c, 0x6c, 0x66, 0x69, 0x6c,
	0x6c, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x66, 0x75, 0x6c, 0x6c, 0x66,
	0x69, 0x6c, 0x6c, 0x65, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d,
	0x73, 0x67, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x4d, 0x73, 0x67, 0x73, 0x22, 0x6c, 0x0a, 0x0b, 0x41, 0x64, 0x64, 0x6f, 0x6e, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x12, 0x5d, 0x0a, 0x1c, 0x61, 0x64, 0x64, 0x5f, 0x6f, 0x6e, 0x5f, 0x65, 0x6e,
	0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x76, 0x61, 0x72, 0x69, 0x61, 0x62,
	0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x76, 0x31, 0x2e, 0x41,
	0x64, 0x64, 0x6f, 0x6e, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x56,
	0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x19, 0x61, 0x64, 0x64, 0x4f, 0x6e, 0x45, 0x6e,
	0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c,
	0x65, 0x73, 0x22, 0x54, 0x0a, 0x18, 0x41, 0x64, 0x64, 0x6f, 0x6e, 0x45, 0x6e, 0x76, 0x69, 0x72,
	0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x35, 0x0a, 0x12, 0x41, 0x64, 0x64, 0x6f,
	0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f,
	0x0a, 0x05, 0x61, 0x64, 0x64, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x6f, 0x6e, 0x52, 0x05, 0x61, 0x64, 0x64, 0x6f, 0x6e, 0x22,
	0x25, 0x0a, 0x13, 0x41, 0x64, 0x64, 0x6f, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x22, 0x0a, 0x10, 0x41, 0x64, 0x64, 0x6f, 0x6e, 0x52,
	0x65, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x34, 0x0a, 0x11, 0x41, 0x64,
	0x64, 0x6f, 0x6e, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x1f, 0x0a, 0x05, 0x61, 0x64, 0x64, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09,
	0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x6f, 0x6e, 0x52, 0x05, 0x61, 0x64, 0x64, 0x6f, 0x6e,
	0x22, 0x36, 0x0a, 0x11, 0x41, 0x64, 0x64, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x06, 0x61, 0x64, 0x64, 0x6f, 0x6e, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x6f, 0x6e,
	0x52, 0x06, 0x61, 0x64, 0x64, 0x6f, 0x6e, 0x73, 0x22, 0x35, 0x0a, 0x12, 0x41, 0x64, 0x64, 0x6f,
	0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f,
	0x0a, 0x05, 0x61, 0x64, 0x64, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x6f, 0x6e, 0x52, 0x05, 0x61, 0x64, 0x64, 0x6f, 0x6e, 0x22,
	0x36, 0x0a, 0x13, 0x41, 0x64, 0x64, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x05, 0x41, 0x64, 0x64, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x6f, 0x6e,
	0x52, 0x05, 0x41, 0x64, 0x64, 0x6f, 0x6e, 0x22, 0x24, 0x0a, 0x12, 0x41, 0x64, 0x64, 0x6f, 0x6e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x25, 0x0a,
	0x13, 0x41, 0x64, 0x64, 0x6f, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x2a, 0x85, 0x01, 0x0a, 0x17, 0x41, 0x64, 0x64, 0x6f, 0x6e, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x16, 0x0a, 0x12, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x5f, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x73, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x62, 0x6f, 0x6f, 0x6c, 0x65, 0x61, 0x6e, 0x10,
	0x02, 0x12, 0x0a, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x10, 0x03, 0x12, 0x08, 0x0a,
	0x04, 0x63, 0x69, 0x64, 0x72, 0x10, 0x04, 0x12, 0x0c, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x10, 0x05, 0x12, 0x15, 0x0a, 0x11, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x10, 0x06, 0x2a, 0x63, 0x0a, 0x1c,
	0x41, 0x64, 0x64, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x15,
	0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x63, 0x6c, 0x75, 0x73, 0x74,
	0x65, 0x72, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x61, 0x64, 0x64, 0x6f, 0x6e, 0x10, 0x02, 0x12,
	0x10, 0x0a, 0x0c, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x5f, 0x70, 0x6f, 0x6f, 0x6c, 0x10,
	0x03, 0x2a, 0x69, 0x0a, 0x10, 0x41, 0x64, 0x64, 0x6f, 0x6e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c,
	0x6c, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x14, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e,
	0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x10, 0x00, 0x12,
	0x14, 0x0a, 0x10, 0x73, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x6f, 0x77, 0x6e, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x10, 0x02, 0x12, 0x12, 0x0a, 0x0e, 0x61, 0x6c, 0x6c, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x10, 0x03, 0x32, 0xaa, 0x03, 0x0a,
	0x0c, 0x41, 0x64, 0x64, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x49, 0x0a,
	0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x15, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x12, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0c, 0x12, 0x0a, 0x2f, 0x76,
	0x31, 0x2f, 0x61, 0x64, 0x64, 0x6f, 0x6e, 0x73, 0x12, 0x50, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x12, 0x16, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x6f, 0x6e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x76, 0x31, 0x2e,
	0x41, 0x64, 0x64, 0x6f, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x15, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0f, 0x22, 0x0a, 0x2f, 0x76, 0x31,
	0x2f, 0x61, 0x64, 0x64, 0x6f, 0x6e, 0x73, 0x3a, 0x01, 0x2a, 0x12, 0x4c, 0x0a, 0x04, 0x52, 0x65,
	0x61, 0x64, 0x12, 0x14, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x6f, 0x6e, 0x52, 0x65, 0x61,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64,
	0x64, 0x6f, 0x6e, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x17, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x11, 0x12, 0x0f, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x64, 0x64,
	0x6f, 0x6e, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x52, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x12, 0x16, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x6f, 0x6e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x76, 0x31, 0x2e,
	0x41, 0x64, 0x64, 0x6f, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x17, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x11, 0x2a, 0x0f, 0x2f, 0x76, 0x31,
	0x2f, 0x61, 0x64, 0x64, 0x6f, 0x6e, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x5b, 0x0a, 0x06,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x16, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x6f,
	0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17,
	0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x20, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1a, 0x1a,
	0x15, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x64, 0x64, 0x6f, 0x6e, 0x73, 0x2f, 0x7b, 0x61, 0x64, 0x64,
	0x6f, 0x6e, 0x2e, 0x69, 0x64, 0x7d, 0x3a, 0x01, 0x2a, 0x42, 0x28, 0x5a, 0x26, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x74, 0x2d, 0x73, 0x72, 0x65, 0x2f, 0x61,
	0x64, 0x64, 0x6f, 0x6e, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_v1_addon_proto_rawDescOnce sync.Once
	file_api_v1_addon_proto_rawDescData = file_api_v1_addon_proto_rawDesc
)

func file_api_v1_addon_proto_rawDescGZIP() []byte {
	file_api_v1_addon_proto_rawDescOnce.Do(func() {
		file_api_v1_addon_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_v1_addon_proto_rawDescData)
	})
	return file_api_v1_addon_proto_rawDescData
}

var file_api_v1_addon_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_api_v1_addon_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_api_v1_addon_proto_goTypes = []interface{}{
	(AddonParameterValueType)(0),           // 0: v1.AddonParameterValueType
	(AddonRequirementResourceType)(0),      // 1: v1.AddonRequirementResourceType
	(AddonInstallMode)(0),                  // 2: v1.AddonInstallMode
	(*Addon)(nil),                          // 3: v1.Addon
	(*AddonParameter)(nil),                 // 4: v1.AddonParameter
	(*AddonParameterOption)(nil),           // 5: v1.AddonParameterOption
	(*AddonRequirement)(nil),               // 6: v1.AddonRequirement
	(*AddonSubOperator)(nil),               // 7: v1.AddonSubOperator
	(*AddonResourceRequirementStatus)(nil), // 8: v1.AddonResourceRequirementStatus
	(*AddonConfig)(nil),                    // 9: v1.AddonConfig
	(*AddonEnvironmentVariable)(nil),       // 10: v1.AddonEnvironmentVariable
	(*AddonCreateRequest)(nil),             // 11: v1.AddonCreateRequest
	(*AddonCreateResponse)(nil),            // 12: v1.AddonCreateResponse
	(*AddonReadRequest)(nil),               // 13: v1.AddonReadRequest
	(*AddonReadResponse)(nil),              // 14: v1.AddonReadResponse
	(*AddonListResponse)(nil),              // 15: v1.AddonListResponse
	(*AddonUpdateRequest)(nil),             // 16: v1.AddonUpdateRequest
	(*AddonUpdateResponse)(nil),            // 17: v1.AddonUpdateResponse
	(*AddonDeleteRequest)(nil),             // 18: v1.AddonDeleteRequest
	(*AddonDeleteResponse)(nil),            // 19: v1.AddonDeleteResponse
	nil,                                    // 20: v1.AddonRequirement.DataEntry
	(*anypb.Any)(nil),                      // 21: google.protobuf.Any
	(*emptypb.Empty)(nil),                  // 22: google.protobuf.Empty
}
var file_api_v1_addon_proto_depIdxs = []int32{
	2,  // 0: v1.Addon.install_mode:type_name -> v1.AddonInstallMode
	4,  // 1: v1.Addon.parameters:type_name -> v1.AddonParameter
	6,  // 2: v1.Addon.requirements:type_name -> v1.AddonRequirement
	7,  // 3: v1.Addon.sub_operators:type_name -> v1.AddonSubOperator
	9,  // 4: v1.Addon.config:type_name -> v1.AddonConfig
	0,  // 5: v1.AddonParameter.value_type:type_name -> v1.AddonParameterValueType
	5,  // 6: v1.AddonParameter.options:type_name -> v1.AddonParameterOption
	6,  // 7: v1.AddonParameterOption.requirements:type_name -> v1.AddonRequirement
	1,  // 8: v1.AddonRequirement.resource:type_name -> v1.AddonRequirementResourceType
	20, // 9: v1.AddonRequirement.data:type_name -> v1.AddonRequirement.DataEntry
	8,  // 10: v1.AddonRequirement.status:type_name -> v1.AddonResourceRequirementStatus
	10, // 11: v1.AddonConfig.add_on_environment_variables:type_name -> v1.AddonEnvironmentVariable
	3,  // 12: v1.AddonCreateRequest.addon:type_name -> v1.Addon
	3,  // 13: v1.AddonReadResponse.addon:type_name -> v1.Addon
	3,  // 14: v1.AddonListResponse.addons:type_name -> v1.Addon
	3,  // 15: v1.AddonUpdateRequest.addon:type_name -> v1.Addon
	3,  // 16: v1.AddonUpdateResponse.Addon:type_name -> v1.Addon
	21, // 17: v1.AddonRequirement.DataEntry.value:type_name -> google.protobuf.Any
	22, // 18: v1.AddonService.List:input_type -> google.protobuf.Empty
	11, // 19: v1.AddonService.Create:input_type -> v1.AddonCreateRequest
	13, // 20: v1.AddonService.Read:input_type -> v1.AddonReadRequest
	18, // 21: v1.AddonService.Delete:input_type -> v1.AddonDeleteRequest
	16, // 22: v1.AddonService.Update:input_type -> v1.AddonUpdateRequest
	15, // 23: v1.AddonService.List:output_type -> v1.AddonListResponse
	12, // 24: v1.AddonService.Create:output_type -> v1.AddonCreateResponse
	14, // 25: v1.AddonService.Read:output_type -> v1.AddonReadResponse
	19, // 26: v1.AddonService.Delete:output_type -> v1.AddonDeleteResponse
	17, // 27: v1.AddonService.Update:output_type -> v1.AddonUpdateResponse
	23, // [23:28] is the sub-list for method output_type
	18, // [18:23] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_api_v1_addon_proto_init() }
func file_api_v1_addon_proto_init() {
	if File_api_v1_addon_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_v1_addon_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Addon); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_addon_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddonParameter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_addon_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddonParameterOption); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_addon_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddonRequirement); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_addon_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddonSubOperator); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_addon_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddonResourceRequirementStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_addon_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddonConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_addon_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddonEnvironmentVariable); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_addon_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddonCreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_addon_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddonCreateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_addon_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddonReadRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_addon_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddonReadResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_addon_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddonListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_addon_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddonUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_addon_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddonUpdateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_addon_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddonDeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_addon_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddonDeleteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_v1_addon_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_v1_addon_proto_goTypes,
		DependencyIndexes: file_api_v1_addon_proto_depIdxs,
		EnumInfos:         file_api_v1_addon_proto_enumTypes,
		MessageInfos:      file_api_v1_addon_proto_msgTypes,
	}.Build()
	File_api_v1_addon_proto = out.File
	file_api_v1_addon_proto_rawDesc = nil
	file_api_v1_addon_proto_goTypes = nil
	file_api_v1_addon_proto_depIdxs = nil
}
